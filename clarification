
#   grammar
#       E  → TE'
#       E' → +TE' | -TE' | ε
#       T  → FT'
#       T' → *FT' | /FT' | ε
#       F  → NUMBER | STRING | ID | (E)
#       ______________________________________________
#       First(E) = {NUMBER, STRING, ID, (}
#       First(E') = {+, -, ε}
#       First(T) = {NUMBER, STRING, ID, (}
#       First(T') = {*, /, ε}
#       First(F) = {NUMBER, STRING, ID, (}
#       ____________________________________________
#       Follow(E) = {$}
#       Follow(E') = {+, -, $}
#       Follow(T) = {$, +, -}
#       Follow(T') = {$, +, -, , /}
#       Follow(F) = {*, /, $, +, -} 
# parse table:
#  __________________________________________________________________________
# |non terminal |NUMBER|STRING|  ID |  (  |  )  |  *  |  /  |  +  |  -  |  $ |
# |_____________|______|______|_____|_____|_____|_____|_____|_____|_____|____|
# |      E      | T E' | T E' | T E'| T E'|     |     |     |     |     |    |
# |      E'     |      |      |     |     |  ε  |     |     |+ TE'| -TE'|  ε |
# |      T      | F T' | F T' | F T'| F T'|     |     |     |     |     |    |
# |      T'     |      |      |     |     |  ε  |* FT'|/ FT'|  ε  |  ε  |    |
# |      F      |NUMBER|STRING|  ID |( E )|     |     |     |     |     |    |
# |__________________________________________________________________________|
